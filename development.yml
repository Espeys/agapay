version: '3.7'

services:

  postgres:
    restart: always
    image: postgres:9.6
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: test

  redis:
    restart: always
    image: redis:5.0
    volumes:
      - redis-data:/data

  nginx:
    restart: always
    image: nginx:1.15
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./media:/apps-media
    links:
      - frontend:frontend
      - backend:backend
    ports:
      - "80:80"
      - "443:443"

  frontend:
    restart: always
    build: .
    volumes:
      - ./frontend:/app
    working_dir: /app
    ports:
      - "9080:8080"
    command: bash -c "yarn install && yarn run serve --host 0.0.0.0 --port 8080"

  backend:
    &backend
    restart: always
    build: .
    volumes:
      - .:/app
    working_dir: /app
    links:
      - postgres:postgres
      - redis:redis
    ports:
      - "8080:8080"
    environment:
      C_FORCE_ROOT: 1
      ALLOWED_HOSTS: "*"
      SECRET_KEY: change-me
      DEBUG: 1
      DATABASE_URL: postgresql://root:root@postgres:5432/test
      BROKER_URL: redis://redis:6379/0
    command: bash -c "python3 manage.py collectstatic --noinput && python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8080"

  cron:
    <<: *backend
    ports:
      - "8081:80"
    command: bash -c "celery --app=config.celery:app beat --loglevel=INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"

  worker:
    <<: *backend
    ports:
      - "8082:80"
    command: bash -c "celery --app=config.celery:app worker --loglevel=INFO --autoscale=1,1 -Q default"

volumes:

  postgres-data:

  redis-data:
